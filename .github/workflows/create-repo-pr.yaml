name: "Create Repo PR"
on:
  issues:
    types: [opened, unlabeled, labeled]

jobs:
  extract_info:
    name: Extract Issue Information
    if: contains(github.event.issue.labels.*.name, 'new-repo')
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.extract_info.outputs.NAME }}
      description: ${{ steps.extract_info.outputs.DESCRIPTION }}
      visibility: ${{ steps.extract_info.outputs.VISIBILITY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Parse Issue Body
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          echo "$ISSUE_BODY" > issue_body.md
          python extract-repo-info.py issue_body.md

      - name: Extract Repo Information
        id: extract_info
        run: |
          echo "NAME=$(grep 'Name:' extracted_info.txt | cut -d':' -f2- | xargs)" >> $GITHUB_OUTPUT
          echo "DESCRIPTION=$(grep 'Description:' extracted_info.txt | cut -d':' -f2- | xargs)" >> $GITHUB_OUTPUT
          echo "VISIBILITY=$(grep 'Visibility:' extracted_info.txt | cut -d':' -f2- | xargs)" >> $GITHUB_OUTPUT

      - name: Print Extracted Information
        run: |
          echo "Name: ${{ steps.extract_info.outputs.NAME }}"
          echo "Description: ${{ steps.extract_info.outputs.DESCRIPTION }}"
          echo "Visibility: ${{ steps.extract_info.outputs.VISIBILITY }}"

  commit_changes:
    name: Commit Changes
    needs: [extract_info]
    runs-on: ubuntu-latest
    outputs:
      name: ${{ needs.extract_info.outputs.name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Modify main.tf
        env:
          NAME: ${{ needs.extract_info.outputs.name }}
          DESCRIPTION: ${{ needs.extract_info.outputs.description }}
          VISIBILITY: ${{ needs.extract_info.outputs.visibility }}
        run: |
          cat <<EOF >> main.tf

          module "github-repo-${{ env.NAME }}" {
            source      = "./modules/repo"
            name        = "${{ env.NAME }}"
            description = "${{ env.DESCRIPTION }}"
            visibility  = "${{ env.VISIBILITY }}"
          }
          EOF

      - name: Commit changes
        env:
          NAME: ${{ needs.extract_info.outputs.name }}
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git checkout -b feature/new-repository-${{ env.NAME }}
          git add main.tf
          git commit -m "Modify main.tf"
          git push origin feature/new-repository-${{ env.NAME }}

  create_pr:
    name: Create Pull Request
    needs: commit_changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Token From GitHub APP
        id: get_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          repositories: "unir-tfm-terraform-github"

      - name: Create Pull Request
        env:
          NAME: ${{ needs.commit_changes.outputs.name }}
          GITHUB_TOKEN: ${{ needs.commit_changes.outputs.GH_TOKEN }}
        run: |
          gh pr create \
          -B main \
          -H feature/new-repository-${{ env.NAME }} \
          -t 'Add new repository: ${{ env.NAME }}' \
          -b 'PR created automatically to create a new repository using Terraform from this issue: ${{ github.event.issue.html_url }}. Please review carefully before merging.' \
          -l 'new-repo'
